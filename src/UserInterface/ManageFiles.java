/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import core.EncryptionEngine;
import core.Resources;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import support.FileStatus;
import support.Log;
import support.Logs;
import support.UserFile;
import support.UserFiles;

/**
 *
 * @author adichouhanofficial
 */
public class ManageFiles extends javax.swing.JFrame {

    private AdminPanel adminPanel;
    private List<UserFile> allfiles;
    private HashMap<Integer,UserFile> mapper;
    DefaultTableModel model;

    /**
     * Creates new form ManageFiles
     */
//    public ManageFiles() 
//    {
//        initComponents(); 
//        Image image = Toolkit.getDefaultToolkit().getImage(getClass().getResource("logo.png"));
//        setIconImage(image);
//        
//    }
    public ManageFiles(AdminPanel adminPanel) 
    {
        initComponents();
        this.adminPanel=adminPanel;
        showTableData();
        Image image = Toolkit.getDefaultToolkit().getImage(getClass().getResource("logo.png"));
        setIconImage(image);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        RemoveFile = new javax.swing.JLabel();
        AddFile = new javax.swing.JLabel();
        EncryptButton = new javax.swing.JLabel();
        EncryptStatus = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Manage Files");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "File", "Type", "Location", "Added By"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Table);
        if (Table.getColumnModel().getColumnCount() > 0) {
            Table.getColumnModel().getColumn(0).setPreferredWidth(150);
            Table.getColumnModel().getColumn(1).setPreferredWidth(50);
            Table.getColumnModel().getColumn(2).setPreferredWidth(200);
            Table.getColumnModel().getColumn(3).setPreferredWidth(50);
        }

        RemoveFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/file-removexs.png"))); // NOI18N
        RemoveFile.setText("Remove File");
        RemoveFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RemoveFileMouseClicked(evt);
            }
        });

        AddFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/filexs.png"))); // NOI18N
        AddFile.setText("Add File");
        AddFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddFileMouseClicked(evt);
            }
        });

        EncryptButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/fileicons/file-unlock.png"))); // NOI18N
        EncryptButton.setText("Decrypt");
        EncryptButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EncryptButtonMouseClicked(evt);
            }
        });

        EncryptStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/fileicons/file-lock.png"))); // NOI18N
        EncryptStatus.setText("Encrypted");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(AddFile, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(RemoveFile, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(EncryptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(EncryptStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RemoveFile)
                    .addComponent(AddFile)
                    .addComponent(EncryptButton)
                    .addComponent(EncryptStatus))
                .addGap(25, 25, 25))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/manage-file.png"))); // NOI18N
        jLabel1.setText("  Manage Files");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(382, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(332, 332, 332))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void refreshTable()
    {
        allfiles.clear();
        mapper.clear();
        model.setRowCount(0);
        showTableData();
    }
    private void showTableData()
    {
        try 
        {  
            EncryptButton.setVisible(false);
            EncryptStatus.setVisible(false);
            allfiles=UserFiles.getAllFile();
            mapper=new HashMap();
            int i=0;            
            model=(DefaultTableModel) Table.getModel();
            //model.setRowCount(0);
            for(UserFile file: allfiles)
            {
                String name= file.getFile().getName();
                String type = file.getExtension(); // Pending work :-here we have to write type of file not extension
                String path =file.getFile().getAbsolutePath();
                String addedby=file.getAddedBy().getName();
                mapper.put(i, file);i++;
                model.addRow(new Object[]{name,type,path,addedby});
            }
        } 
        catch (IOException ex) 
        {
            JOptionPane.showMessageDialog(this,"Something went wrong !!!");
            adminPanel.setVisible(true);
            dispose();
        }
    }
    private void EncryptButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EncryptButtonMouseClicked
        // TODO add your handling code here:
    if(Resources.lockFlag)
    {
        String operation = EncryptButton.getText();
        int confirm=JOptionPane.showConfirmDialog(this,"Do you really want to "+operation.toLowerCase()+" selected file ?");
        if(confirm==0)
        {
            try
            {
                int row = Table.getSelectedRow();
                UserFile myfile=mapper.get(row);
                String key = Resources.key(myfile.getAddedBy().getMAC());
                EncryptionEngine ee = new EncryptionEngine(key);
                File file = myfile.getFile();
                boolean encrypted =myfile.isEncrypted();
                if(encrypted)
                {
                    file.setWritable(true);
                    ee.fileDecrypt(file);
                    Log log = new Log(adminPanel.getUser().getName(),"File decrypted : "+file.getName());
                    Logs.addLog(log);
                }
                else
                {
                    ee.fileEncrypt(file);
                    file.setWritable(false);
                    Log log = new Log(adminPanel.getUser().getName(),"File encrypted : "+file.getName());
                    Logs.addLog(log);
                }
                UserFiles.removeFile(myfile);
                myfile.setEncrypted(!encrypted);
                UserFiles.addFile(myfile);
                this.refreshTable();
            } 
            catch (IOException ex) 
            {
                JOptionPane.showMessageDialog(this,"Something went wrong with file system");
                System.out.println("Serious issue with file status can be occured");
            }            
        }
    }
    else
    {
        JOptionPane.showMessageDialog(this,"Application under Maintainance");
    }
    }//GEN-LAST:event_EncryptButtonMouseClicked

    private void AddFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddFileMouseClicked
        // TODO add your handling code here:
    if(Resources.lockFlag)
    {
        JFileChooser chooser= new JFileChooser("D:\\");
        chooser.setMultiSelectionEnabled(false);
        if(chooser.showDialog(this,"Choose a file")==JFileChooser.APPROVE_OPTION)
        {
            File file=chooser.getSelectedFile();
            String extension = Resources.fetchFileExtension(file.getAbsolutePath());
            if(file.exists() && file.isFile())
            {
                if(!extension.equals("desksure"))
                {   
                    System.out.println(file);
                    int confirm=JOptionPane.showConfirmDialog(this,"Do you really want to Secure this File using DeskSure ?");
                    if(confirm==0) // if user click on yes
                    {
                        String key = Resources.key(adminPanel.getUser().getMAC());  //generating key by Formatted MAC address               
                        try
                        {
                            EncryptionEngine ee = new EncryptionEngine(key);
                            UserFile userfile = new UserFile(file,extension,adminPanel.getUser(),FileStatus.ENCRYPTED);
                            UserFiles.addFile(userfile);
                            ee.fileEncrypt(file);    
                            file.setWritable(false);
                            Log log = new Log(adminPanel.getUser().getName(),"New File added : "+file.getName());
                            Logs.addLog(log);
                            this.refreshTable();
                        } 
                        catch (IOException ex) 
                        {
                            JOptionPane.showMessageDialog(this,"Something went wrong with file system");
                        }
                    }      
                 }
                else
                {
                    JOptionPane.showMessageDialog(this,"File is already secured by desksure !");
                }
                
         }
        }
    }
    else
    {
        JOptionPane.showMessageDialog(this,"Application under Maintainance");
    }
    }//GEN-LAST:event_AddFileMouseClicked

    private void RemoveFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RemoveFileMouseClicked
        // TODO add your handling code here:
    if(Resources.lockFlag)
    {
        int rowNo = Table.getSelectedRow();
        if(rowNo==-1)
        {
            JOptionPane.showMessageDialog(this,"Please select the file first !");
        }
        else
        {
            int confirm=JOptionPane.showConfirmDialog(this,"Do you really want to remove this file from desksure ?");
            if(confirm==0)
            {
                try 
                {
                    UserFile myfile = mapper.get(rowNo);

                    if(myfile.isEncrypted())  // It will removed file after decrypting it
                    {
                        File file= myfile.getFile();
                        String key = Resources.key(myfile.getAddedBy().getMAC());
                        System.out.println("key len "+key.length());
                        EncryptionEngine ee = new EncryptionEngine(key);
                        file.setWritable(true);
                        ee.fileDecrypt(file);                        
                    }
                    UserFiles.removeFile(myfile);
                    JOptionPane.showMessageDialog(this,"File successfully removed !");
                    Log log = new Log(adminPanel.getUser().getName(),"File removed : "+myfile.getFile().getName());
                    Logs.addLog(log);
                    this.refreshTable();
                } 
                catch (IOException ex) 
                {
                    JOptionPane.showMessageDialog(this,"Something Went wrong with files");
                }
            }
        }
    }
    else
    {
        JOptionPane.showMessageDialog(this,"Application under Maintainance");
    }
    }//GEN-LAST:event_RemoveFileMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:    
    }//GEN-LAST:event_formWindowOpened

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMouseClicked
        // TODO add your handling code here:
        
        int row=Table.getSelectedRow();
        if(row!=-1)
        {
            EncryptButton.setVisible(true);
            EncryptStatus.setVisible(true);

            UserFile myfile =mapper.get(row);
            if(myfile.isEncrypted())
            {
                EncryptButton.setText("Decrypt");
                EncryptButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/fileicons/file-unlock.png")));
                EncryptStatus.setText("Encrypted");
                EncryptStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/fileicons/file-lock.png")));
            }
            else
            {
                EncryptStatus.setText("Decrypted");
                EncryptStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/fileicons/file-unlock.png")));
                EncryptButton.setText("Encrypt");
                EncryptButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/fileicons/file-lock.png")));
            }
        }
    }//GEN-LAST:event_TableMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        this.adminPanel.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new ManageFiles().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AddFile;
    private javax.swing.JLabel EncryptButton;
    private javax.swing.JLabel EncryptStatus;
    private javax.swing.JLabel RemoveFile;
    private javax.swing.JTable Table;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
